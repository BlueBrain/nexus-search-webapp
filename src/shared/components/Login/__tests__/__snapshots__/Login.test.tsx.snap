// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`login component should render correctly 1`] = `
<Login
  clientId="nexus-web"
  hostName="http://nexus"
  realms={
    Array [
      Object {
        "authorizationEndpoint": "https://bbpteam.epfl.ch/auth/realms/BBP/protocol/openid-connect/auth",
        "name": "HBP",
      },
    ]
  }
  redirectUrl="http://nexus.bbp.com/my/url/"
>
  <div
    className="Login"
  >
    <Card
      actions={
        Array [
          <a
            className="link"
            href="https://bbpteam.epfl.ch/auth/realms/BBP/protocol/openid-connect/auth?client_id=nexus-web&response_type=token&scope=openid&nonce=123456&redirect_uri=http://nexus/authRedirect?redirectUrl=http://nexus.bbp.com/my/url/"
          >
            Log in 
            <Icon
              type="login"
            />
          </a>,
        ]
      }
      cover={
        <img
          alt="Nexus logo"
          className="logo"
          src="/mock/path"
        />
      }
    >
      <div
        className="ant-card ant-card-bordered"
      >
        <div
          className="ant-card-cover"
        >
          <img
            alt="Nexus logo"
            className="logo"
            src="/mock/path"
          />
        </div>
        <div
          className="ant-card-body"
          style={Object {}}
        >
          <p
            className="message"
          >
            Please log in to continue.
          </p>
        </div>
        <ul
          className="ant-card-actions"
        >
          <li
            key="action-0"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <span>
              <a
                className="link"
                href="https://bbpteam.epfl.ch/auth/realms/BBP/protocol/openid-connect/auth?client_id=nexus-web&response_type=token&scope=openid&nonce=123456&redirect_uri=http://nexus/authRedirect?redirectUrl=http://nexus.bbp.com/my/url/"
                key="login"
              >
                Log in 
                <Icon
                  type="login"
                >
                  <LocaleReceiver
                    componentName="Icon"
                  >
                    <i
                      aria-label="icon: login"
                      className="anticon anticon-login"
                    >
                      <IconReact
                        className=""
                        type="login-o"
                      >
                        <svg
                          aria-hidden="true"
                          className=""
                          data-icon="login"
                          fill="currentColor"
                          height="1em"
                          key="svg-login"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M521.7 82c-152.5-.4-286.7 78.5-363.4 197.7-3.4 5.3.4 12.3 6.7 12.3h70.3c4.8 0 9.3-2.1 12.3-5.8 7-8.5 14.5-16.7 22.4-24.5 32.6-32.5 70.5-58.1 112.7-75.9 43.6-18.4 90-27.8 137.9-27.8 47.9 0 94.3 9.3 137.9 27.8 42.2 17.8 80.1 43.4 112.7 75.9 32.6 32.5 58.1 70.4 76 112.5C865.7 417.8 875 464.1 875 512c0 47.9-9.4 94.2-27.8 137.8-17.8 42.1-43.4 80-76 112.5s-70.5 58.1-112.7 75.9A352.8 352.8 0 0 1 520.6 866c-47.9 0-94.3-9.4-137.9-27.8A353.84 353.84 0 0 1 270 762.3c-7.9-7.9-15.3-16.1-22.4-24.5-3-3.7-7.6-5.8-12.3-5.8H165c-6.3 0-10.2 7-6.7 12.3C234.9 863.2 368.5 942 520.6 942c236.2 0 428-190.1 430.4-425.6C953.4 277.1 761.3 82.6 521.7 82zM395.02 624v-76h-314c-4.4 0-8-3.6-8-8v-56c0-4.4 3.6-8 8-8h314v-76c0-6.7 7.8-10.5 13-6.3l141.9 112a8 8 0 0 1 0 12.6l-141.9 112c-5.2 4.1-13 .4-13-6.3z"
                            key="svg-login-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </i>
                  </LocaleReceiver>
                </Icon>
              </a>
            </span>
          </li>
        </ul>
      </div>
    </Card>
  </div>
</Login>
`;

exports[`login component with more than 1 realm should render correctly 1`] = `
<Login
  clientId="nexus-web"
  hostName="http://nexus"
  realms={
    Array [
      Object {
        "authorizationEndpoint": "https://bbpteam.epfl.ch/auth/realms/BBP/protocol/openid-connect/auth",
        "name": "BBP",
      },
      Object {
        "authorizationEndpoint": "https://bbpteam.epfl.ch/auth/realms/BBP/protocol/openid-connect/auth",
        "name": "HBP",
      },
      Object {
        "authorizationEndpoint": "https://accounts.google.com/.well-known/openid-configuration",
        "name": "Google",
      },
    ]
  }
  redirectUrl="http://nexus.bbp.com/my/url/"
>
  <div
    className="Login"
  >
    <Card
      actions={
        Array [
          <a
            className="link"
            href="https://bbpteam.epfl.ch/auth/realms/BBP/protocol/openid-connect/auth?client_id=nexus-web&response_type=token&scope=openid&nonce=123456&redirect_uri=http://nexus/authRedirect?redirectUrl=http://nexus.bbp.com/my/url/"
          >
            <React.Fragment>
              Log in with
               
              <Dropdown
                mouseEnterDelay={0.15}
                mouseLeaveDelay={0.1}
                overlay={
                  <Menu
                    className=""
                    focusable={false}
                    onClick={[Function]}
                    theme="light"
                  >
                    <MenuItem>
                      BBP
                    </MenuItem>
                    <MenuItem>
                      HBP
                    </MenuItem>
                    <MenuItem>
                      Google
                    </MenuItem>
                  </Menu>
                }
                placement="bottomLeft"
              >
                <span
                  className="realm"
                >
                  HBP
                </span>
              </Dropdown>
               
            </React.Fragment>
            <Icon
              type="login"
            />
          </a>,
        ]
      }
      cover={
        <img
          alt="Nexus logo"
          className="logo"
          src="/mock/path"
        />
      }
    >
      <div
        className="ant-card ant-card-bordered"
      >
        <div
          className="ant-card-cover"
        >
          <img
            alt="Nexus logo"
            className="logo"
            src="/mock/path"
          />
        </div>
        <div
          className="ant-card-body"
          style={Object {}}
        >
          <p
            className="message"
          >
            Please log in to continue.
          </p>
        </div>
        <ul
          className="ant-card-actions"
        >
          <li
            key="action-0"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <span>
              <a
                className="link"
                href="https://bbpteam.epfl.ch/auth/realms/BBP/protocol/openid-connect/auth?client_id=nexus-web&response_type=token&scope=openid&nonce=123456&redirect_uri=http://nexus/authRedirect?redirectUrl=http://nexus.bbp.com/my/url/"
                key="login"
              >
                Log in with
                 
                <Dropdown
                  mouseEnterDelay={0.15}
                  mouseLeaveDelay={0.1}
                  overlay={
                    <Menu
                      className=""
                      focusable={false}
                      onClick={[Function]}
                      theme="light"
                    >
                      <MenuItem>
                        BBP
                      </MenuItem>
                      <MenuItem>
                        HBP
                      </MenuItem>
                      <MenuItem>
                        Google
                      </MenuItem>
                    </Menu>
                  }
                  placement="bottomLeft"
                >
                  <Dropdown
                    defaultVisible={false}
                    mouseEnterDelay={0.15}
                    mouseLeaveDelay={0.1}
                    onVisibleChange={[Function]}
                    overlay={[Function]}
                    overlayClassName=""
                    overlayStyle={Object {}}
                    placement="bottomLeft"
                    prefixCls="ant-dropdown"
                    showAction={Array []}
                    transitionName="slide-up"
                    trigger={
                      Array [
                        "hover",
                      ]
                    }
                  >
                    <Trigger
                      action={
                        Array [
                          "hover",
                        ]
                      }
                      afterPopupVisibleChange={[Function]}
                      blurDelay={0.15}
                      builtinPlacements={
                        Object {
                          "bottomCenter": Object {
                            "offset": Array [
                              0,
                              4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "tc",
                              "bc",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "bottomLeft": Object {
                            "offset": Array [
                              0,
                              4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "tl",
                              "bl",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "bottomRight": Object {
                            "offset": Array [
                              0,
                              4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "tr",
                              "br",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "topCenter": Object {
                            "offset": Array [
                              0,
                              -4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "bc",
                              "tc",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "topLeft": Object {
                            "offset": Array [
                              0,
                              -4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "bl",
                              "tl",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "topRight": Object {
                            "offset": Array [
                              0,
                              -4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "br",
                              "tr",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                        }
                      }
                      defaultPopupVisible={false}
                      defaultVisible={false}
                      destroyPopupOnHide={false}
                      focusDelay={0}
                      getDocument={[Function]}
                      getPopupClassNameFromAlign={[Function]}
                      hideAction={Array []}
                      mask={false}
                      maskClosable={true}
                      mouseEnterDelay={0.15}
                      mouseLeaveDelay={0.1}
                      onPopupAlign={[Function]}
                      onPopupVisibleChange={[Function]}
                      onVisibleChange={[Function]}
                      overlay={[Function]}
                      popup={[Function]}
                      popupAlign={Object {}}
                      popupClassName=""
                      popupPlacement="bottomLeft"
                      popupStyle={Object {}}
                      popupTransitionName="slide-up"
                      popupVisible={false}
                      prefixCls="ant-dropdown"
                      showAction={Array []}
                    >
                      <span
                        className="realm ant-dropdown-trigger"
                        key="trigger"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        HBP
                      </span>
                    </Trigger>
                  </Dropdown>
                </Dropdown>
                 
                <Icon
                  type="login"
                >
                  <LocaleReceiver
                    componentName="Icon"
                  >
                    <i
                      aria-label="icon: login"
                      className="anticon anticon-login"
                    >
                      <IconReact
                        className=""
                        type="login-o"
                      >
                        <svg
                          aria-hidden="true"
                          className=""
                          data-icon="login"
                          fill="currentColor"
                          height="1em"
                          key="svg-login"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M521.7 82c-152.5-.4-286.7 78.5-363.4 197.7-3.4 5.3.4 12.3 6.7 12.3h70.3c4.8 0 9.3-2.1 12.3-5.8 7-8.5 14.5-16.7 22.4-24.5 32.6-32.5 70.5-58.1 112.7-75.9 43.6-18.4 90-27.8 137.9-27.8 47.9 0 94.3 9.3 137.9 27.8 42.2 17.8 80.1 43.4 112.7 75.9 32.6 32.5 58.1 70.4 76 112.5C865.7 417.8 875 464.1 875 512c0 47.9-9.4 94.2-27.8 137.8-17.8 42.1-43.4 80-76 112.5s-70.5 58.1-112.7 75.9A352.8 352.8 0 0 1 520.6 866c-47.9 0-94.3-9.4-137.9-27.8A353.84 353.84 0 0 1 270 762.3c-7.9-7.9-15.3-16.1-22.4-24.5-3-3.7-7.6-5.8-12.3-5.8H165c-6.3 0-10.2 7-6.7 12.3C234.9 863.2 368.5 942 520.6 942c236.2 0 428-190.1 430.4-425.6C953.4 277.1 761.3 82.6 521.7 82zM395.02 624v-76h-314c-4.4 0-8-3.6-8-8v-56c0-4.4 3.6-8 8-8h314v-76c0-6.7 7.8-10.5 13-6.3l141.9 112a8 8 0 0 1 0 12.6l-141.9 112c-5.2 4.1-13 .4-13-6.3z"
                            key="svg-login-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </i>
                  </LocaleReceiver>
                </Icon>
              </a>
            </span>
          </li>
        </ul>
      </div>
    </Card>
  </div>
</Login>
`;
